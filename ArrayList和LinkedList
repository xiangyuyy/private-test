ArrayList是实现了基于动态数组的数据结构，LinkedList是基于链表结构。
对于随机访问的get和set方法，ArrayList要优于LinkedList，因为LinkedList要移动指针。
对于新增和删除操作add和remove，LinkedList比较占优势，因为ArrayList要移动数据。


1. LinkedList和ArrayList的差别主要来自于Array和LinkedList数据结构的不同。ArrayList是基于数组实现的，LinkedList是基于双链表实现的。另外LinkedList类不仅是List接口的实现类，可以根据索引来随机访问集合中的元素，除此之外，LinkedList还实现了Deque接口，Deque接口是Queue接口的子接口，它代表一个双向队列，因此LinkedList可以作为双向队列 ，栈（可以参见Deque提供的接口方法）和List集合使用，功能强大。

数组在存储数据时是按顺序存储的，存储数据的内存也是连续的，

来自 <https://blog.csdn.net/TTTZZZTTTZZZ/article/details/84916281> 


2. 因为Array是基于索引(index)的数据结构，它使用索引在数组中搜索和读取数据是很快的，可以直接返回数组中index位置的元素，因此在随机访问集合元素上有较好的性能。Array获取数据的时间复杂度是O(1),但是要插入、删除数据却是开销很大的，因为这需要移动数组中插入位置之后的的所有元素。

3. 相对于ArrayList，LinkedList的随机访问集合元素时性能较差，因为需要在双向列表中找到要index的位置，再返回；但在插入，删除操作是更快的。因为LinkedList不像ArrayList一样，不需要改变数组的大小，也不需要在数组装满的时候要将所有的数据重新装入一个新的数组，这是ArrayList最坏的一种情况，时间复杂度是O(n)，而LinkedList中插入或删除的时间复杂度仅为O(1)。ArrayList在插入数据时还需要更新索引（除了插入数组的尾部）。

4. LinkedList需要更多的内存，因为ArrayList的每个索引的位置是实际的数据，而LinkedList中的每个节点中存储的是实际的数据和前后节点的位置。

使用场景：

（1）如果应用程序对数据有较多的随机访问，ArrayList对象要优于LinkedList对象；

  ( 2 ) 如果应用程序有更多的插入或者删除操作，较少的随机访问，LinkedList对象要优于ArrayList对象；

（3）不过ArrayList的插入，删除操作也不一定比LinkedList慢，如果在List靠近末尾的地方插入，那么ArrayList只需要移动较少的数据，而LinkedList则需要一直查找到列表尾部，反而耗费较多时间，这时ArrayList就比LinkedList要快。
————————————————
版权声明：本文为CSDN博主「Forget_Sky」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/u012216131/article/details/82500925


原文链接：https://blog.csdn.net/TTTZZZTTTZZZ/article/details/84916281

数组特点
在内存中,数组是一块连续的区域.
数组需要预留空间,在使用前要先申请占内存的大小,可能会浪费内存空间.三种情况
有空间没有被使用
太多就要扩容数组
更换数组
插入,删除效率低.因为其连续性,插入和删除一个元素其后面的元素都要向前或向后移动
随机读取效率高.因为数组是连续的,知道每一个数据的内存地址,可以直接找到给地址的数据
不好扩展,有时候数组空间不够要重新定义数组


链表特点

在内存中可以存在任何地方,不要求连续
每一个数据都保存了下一个数据的内存地址,通过这个地址找到下一个数据.
增加数据和删除数据很容易.只需要把自己位置告诉前面那个元素就行
查找数据时效率低,因为不具有随机方文星,所以访问某个数据时要从第一个数据开始访问
不指定大小,口占方便.链表大小不用定义


数组优点

随机访问强
查找速度速度快
数组缺点
插入和删除效率低
可能浪费内存
内存空间要求高,必须有足够的连续内存空间
数组大小固定,不能动态拓展

链表优点


插入删除速度快
内存利用率高,不会浪费内存
大小没有固定,拓展很灵活

链表的缺点

不能随机查找,必须从第一个开始遍历,查找效率很低
————————————————
版权声明：本文为CSDN博主「宝宝的阿松」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/weixin_43285711/article/details/114998240

