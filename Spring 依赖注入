注入简介
Spring注入可以理解为是对一个对象进行初始化，也就是省去new的这个步骤，类似于工厂模式一样，通过一个工厂制造出这个对象，如果遇到修改，只需要改一处就行了。实现spring注入一般有两种方法，配置文件，或者用注解。各有不同的作用。
注意：本文中涉及到所以例子均默认加入了spring的包，如果没有加入spring包可以自己百度一下用maven或者手动下载spring的依赖包（这里就不给博客了，还是应该自己动动手吧）

配置注入：
不重复造轮子，这里已经说明得很清楚了，介绍了两种方式，set注入和构造注入，并且都很详细。至于这篇文中提及到的第三种：接口注入，本人小白观点，应该用interface来注入，在用mybatis框架时一般会接触到，注入这里本人也不介绍这个了，因为涉及到mybatis另一个框架，比较复杂。
PS:这位作者写的spring系列文章的确可以参考一下，本人也从中获益良多。
http://blog.csdn.net/lishuangzhe7047/article/details/20740835 
 
注解注入：
自动装配
在了解注解注入之前，需要先了解一下自动装配这个概念，这篇博客也说得比较详细，可以先参考这个知道一些概念，由于这篇博客没有给出很详细的例子，所以这里本人会给个例子。
http://blog.csdn.net/lishuangzhe7047/article/details/20742427 
首先介绍一下文件结构，Main主要来调试运行，Bean其中一个对象，Test，Bean所依赖的一个对象（也就是Bean成员里有Test对象），如图：


注解	含义
@Component	最普通的组件，可以被注入到spring容器进行管理
@Repository	作用于持久层
@Service	作用于业务逻辑层
@Controller	作用于表现层（spring-mvc的注解）

来自 <http://www.cicoding.cn/spring/whats-the-difference-between-component-repository-service-controller-annotations-in/> 

@Component注解默认实例化的对象是单例，如果想声明成多例对象可以使用@Scope("prototype")
@Repository默认单例
@Service默认单例
@Controller默认多例

来自 <http://www.yayihouse.com/yayishuwu/chapter/1282> 




配置注入VS注解注入
其实可以看出来，这两种的本质其实就是调用了构造函数，不过配置注入中的set注入是在调用构造函数后从配置文件里面读值然后set进去，构造注入是选择了特定的构造函数进行构造。注解注入就是调用了默认构造函数。如果要在注解注入中初始化对象成员中的值（例如本例中Bean的String 对象的值），那就需要在默认构造函数中进行初始化。
选择配置注入的好处
配置注入其实和工厂模式差不多，但选择配置注入的好处在于可以把值和代码分开，方便管理，可以在配置文件中赋值
选择注解注入的好处
虽然注解注入又把注解和代码混在一起了，但是也可以方便把配置和类对应起来，而且配置比较简单，写个注解就行了。但是如果你要用注解配置初始化值，就只能在默认构造函数中写。
所以一般常用的是，如果需要值的注入，一般用配置注入，例如数据库连接类，就也可以在那里初始化用户名和密码；如果是无具体值的类，例如只用方法的类，像那些controller和那些service，虽然里面有一些对象，但这些对象不需要给什么值，只要new一个对象就行了，这种一般就用注解注入。

来自 <https://blog.csdn.net/d124939312/article/details/79022984> 
