ETCD使用[Raft]协议， ZK使用ZAB（类PAXOS协议）

Raft协议正如论文所述，确实方便理解。主要分为三个部分：选主，日志复制，安全性。

来自 <https://www.cnblogs.com/softidea/p/6517959.html> 




Raft 算法详解（一）领导者选举


如何理解随机超时时间
在议会选举中，常出现未达到指定票数，选举无效，需要重新选举的情况。在 Raft 算法的 选举中，也存在类似的问题，那它是如何处理选举无效的问题呢？

其实，Raft 算法巧妙地使用随机选举超时时间的方法，把超时时间都分散开来，在大多数 情况下只有一个服务器节点先发起选举，而不是同时发起选举，这样就能减少因选票瓜分导 致选举失败的情况。

我想强调的是，在 Raft 算法中，随机超时时间是有 2 种含义的，这里是很多同学容易理解 出错的地方，需要你注意一下：

跟随者等待领导者心跳信息超时的时间间隔，是随机的；
当没有候选人赢得过半票数，选举无效了，这时需要等待一个随机时间间隔，也就是 说，等待选举超时的时间间隔，是随机的。
ls/106316163


来自 <https://blog.csdn.net/lin819747263/article/details/106316163> 
