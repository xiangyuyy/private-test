节约内存原则

在了解了对象的内存使用情况后，我们可以简单算一笔帐。

一个  java.lang.Integer 占用 16byte，而一个 int 占用 4byte，4:1  的比例。

也就是说整数的类类型是基本类型内存的 4 倍！

由此我们得出第一个节约内存的原则：

(1) 尽量使用基本类型，而不是包装类型。

数据库建表的时候字段类型需要仔细推敲，同样 JavaBean 中的属性字段类型也需要仔细斟酌。

不要吝啬使用 short，byte，boolean，如果短类型能放下数据，尽量不要使用更长的类型。

一个 long 比一个 int 才多 4byte，但是你要想，如果内存中有 100W 个 long，那就白白浪费了约 4MB 空间，不要小看这一点点的空间浪费，因为随便一个跑着在线应用的 JVM 中，对象都能达到上千万！

内存是节省出来的。

(2) 斟酌字段类型，在满足容量前提下，尽量用小字段。
Object Header 占 4byte，Pointer 占 4byte，一个 int 字段(size)占 4byte，elementData 数组本身占 12(4+4+4)，数组中 10 个 Integer 对象占 10×16。

所以整个集合空间大小为 4+4+4+12+160=184byte。

如果我们用 int[] 代替集合呢，12+4×10=52byte，对其后 56byte。

集合跟数组的比例是 184:56，超过 3:1 了！

(3) 如果可能，尽量用数组，少用集合。

数组中是可以使用基本类型的，但是集合中只能放包装类型！

如果实在需要使用集合，推荐一个比较节约内存的集合工具， fastutil。

这里面包含了 JKD 集合中绝大部分的实现，而且比较省内存。

小技巧

在上面的三个原则基础上，提供两个小技巧。
	• 时间用 long/int 表示，不用 Date 或者 String。
	• 短字符串如果能穷举或者转换成 ascii 表示，可以用 long 或者 int 表示。

来自 <https://blog.csdn.net/qq_42914528/article/details/90832481> 

